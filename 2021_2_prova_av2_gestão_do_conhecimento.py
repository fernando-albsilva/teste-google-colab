# -*- coding: utf-8 -*-
"""2021_2_Prova_AV2_Gestão_do_Conhecimento.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s4xUhYfZ4l0oz96lLVJJNHmxkdG-gps3

DISCIPLINA: Gestão do Conhecimento	 PROFESSOR(A): Alex Salgado
PERÍODO: 7o. TURNO: noite AVALIAÇÃO:

ALUNO(A): Guilherme Rocha

GRAU: VISTO DO PROFESSOR:

# Questão 1 - valor (0,0)

*** Crie um repositório no Github e adicione este arquivo no mesmo


1.1 - Você deve escolher uma base de dados do Kaggle.

A natureza desse dataset deve se encaixar em um problema que podemos resolver utilizando modelos de previsão de machine learning supervisionado de classificação. 

A partir desta base de dados do Kaggle, você vai treinar o modelo, fazer previsões e calcular a acurácia do mesmo, usando modelos e algoritmos que desejar.

Obs1: Usar o Kaggle como fonte para o seu dataset obrigatoriamente.
Obs2: Implementações idênticas ou bem parecidas pode levar a anulação da NOTA ou seja, ZERO!! Faça o melhor com sua equipe apenas.
"""



"""1.1 - Coloque aqui o link para o seu dataset escolhido no Kaggle.


"""

# https://www.kaggle.com/uciml/red-wine-quality-cortez-et-al-2009

"""1.1.1 - Descreva sobre o que é base de dados."""

#Os dois conjuntos de dados estão relacionados com as variantes tinto e branco do vinho "Vinho Verde" português. Para mais detalhes, consulte a referência [Cortez et al., 2009]. Devido a questões de privacidade e logística, apenas as variáveis ​​físico-químicas (entradas) e sensoriais (a saída) estão disponíveis (por exemplo, não há dados sobre os tipos de uva, marca de vinho, preço de venda do vinho, etc.).

"""1.1.2 - Se você fez em grupo, quais os nomes dos componentes do seu grupo?"""

#Fernando Albuquerque, Guilherme Vasconselos

"""1.2 - Após tratada, criar uma pasta no seu GoogleDrive e disponibilizar o link do arquivo de sua base (csv, xlsx, etc) para ser importado no seu código."""

from google.colab import drive
drive.mount('/content/drive')

# https://drive.google.com/file/d/1llkI9FhqE9hjiYix-EvrAjCnUgwUxOXh/view?usp=sharing

from google.colab import drive
drive.mount('/content/drive')

"""## Criar um código usando o Jupyter Notebook e responder (através de código) às seguintes questões:

"""



"""# Questão 2 - valor (1,5)

2.1 - Importar os modulos python para machine learn e carregar o arquivo 

** Sugestão se for do tipo xlsx, usar o read_excel do pandas
import pandas as pd
dt = pd.read_excel("meuarquivo.xlsx")
"""

import pandas as pd
df=pd.read_csv("/content/drive/MyDrive/Colab Notebooks/csv/winequality-red.csv")

"""2.2 - Exibir os primeiros registros desta tabela.

"""

df.head()

"""2.3 - De que se trata esse banco de dados? e que tipo de previsão pode ser feito com ele?

"""

#Qualidade dos vinhos tinto. Ruim, Bom e Ótimo

"""# Questão 3 - valor (2,5)

Utilizando as terminologias de Machine Learning(features e observações):

3.1 - Quantas "features" têm nessa base de dados?
"""

df.shape[1]

"""3.2 - Quantas observações têm nessa base de dados?

"""

df.shape[0]

"""
3.3 - Separe o que é entrada (features) do seu dataset na variável X, e exiba."""

# colunas a serem consideradas
print(df)



"""3.4 - Separe o que é saída (target/resposta) do seu dataset na variável y, e exiba."""

target = df["quality"].tolist()
print(target)

"""# Questão 4 - valor (1,5)

4.1 - Utilizando a sua base, faça um treinamento e uma previsão, usando o algoritmo de clsssificação de sua escolha.
"""

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=7)

knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)



print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

"""# Questão 5 - valor (1,5)




"""

from sklearn import metrics
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df, target, test_size=0.3) # 70% training and 30% test

knn = KNeighborsClassifier(n_neighbors=5)

knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)


print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

"""Usando o método de avaliação de acurácia (Train test split), Escolha outros 2 algoritmos de classificação e calcule a acurácia dos mesmos.

5.2 - Acurácia usando o algoritmo 1 ?
"""

# Accuracy: 0.54375

"""5.3 - Acurácia usando o algoritmo 2 ?




"""

#Accuracy: 0.5708333333333333

"""5.4 - De acordo com seus resultados anteriores, qual dos 2 algoritmos é mais eficiente?

"""

# algoritimo 2

"""# Questão 6 - valor (1,5)

6 - Faça um visualização auto-explicativa da sua base de dados utilizando o matplotlib. Coloque o código e a visualização abaixo.
"""

import matplotlib.pyplot as plt
y=[500,1200,350]
x=[5,6,7]
plt.plot(x,y)
plt.xlabel('qualidade')
plt.ylabel('quantidade de vinhos')
plt.show()

*** Envie o link do seu Github com essa resposta no Classroom